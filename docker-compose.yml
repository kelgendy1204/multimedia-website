version: '3'

services:
  #PHP Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: mzk/php
    container_name: app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./docker/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network
    command: >
        bash -c "./wait-for-it.sh db:3306 &&
                cp -n .env.example .env &&
                composer install &&
                php artisan migrate &&
                php-fpm"
    depends_on:
      - db

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    environment:
      - PMA_ARBITRARY=1
      - PMA_HOST=db
      - PMA_PORT=3306
      - MYSQL_ROOT_PASSWORD=root
    restart: unless-stopped
    ports:
      - 8080:80
    volumes:
      - /sessions
    depends_on:
      - db
    networks:
      - app-network

  #Nginx Service
  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www
      - ./docker/conf.d/:/etc/nginx/conf.d/
    networks:
      - app-network

  #MySQL Service
  db:
    image: mysql:5.7.22
    container_name: db
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    volumes:
      - dbdata:/var/lib/mysql
      - ./docker/my.cnf:/etc/mysql/my.cnf
    environment:
      MYSQL_DATABASE: root
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: mzk
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - app-network

  #node Service
  node:
    build:
      context: .
      dockerfile: Dockerfile-node
    container_name: node
    user: "node"
    restart: unless-stopped
    tty: true
    working_dir: /home/node/app
    volumes:
      - ./:/home/node/app
    command: bash -c "yarn install && gulp develop"

#Docker Networks
networks:
  app-network:
    driver: bridge

#Volumes
volumes:
  dbdata:
    driver: local
